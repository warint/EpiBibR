epibibr_visual <- function(chart = "line_1", title = TRUE){
PY <- ..count.. <- AU <- AU_CO <- NULL
url <- paste0("https://warin.ca/datalake/epiBib/EpiBib.Rdata")
path <- file.path(tempdir(), "temp.Rdata")
curl::curl_download(url, path)
#reading the data
rData <- file.path(paste0(tempdir(), "/temp.Rdata"))
load(rData)
if(chart == "line_1"){
EpiBib_data$PY <- as.numeric(EpiBib_data$PY)
if(title == TRUE){
ggplot2::ggplot(data = EpiBib_data, ggplot2::aes(x = PY)) +
ggplot2::geom_line(aes(fill=..count..), stat="bin", bins = 30, size = 0.8, color = "olivedrab") +
ggplot2::geom_point(aes(fill=..count..), stat="bin", bins = 30, size = 2.5, color = "olivedrab") +
ggplot2::ggtitle("Count of Articles") +
ggplot2::xlab("") + ggplot2::ylab("Articles") +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none")
} else {
ggplot2:: ggplot(data = EpiBib_data, ggplot2::aes(x = PY)) +
ggplot2::geom_line(aes(fill=..count..), stat="bin", bins = 30, size = 0.8, color = "olivedrab") +
ggplot2::geom_point(aes(fill=..count..), stat="bin", bins = 30, size = 2.5, color = "olivedrab") +
ggplot2::ggtitle("") +
ggplot2::xlab("") + ggplot2::ylab("Articles") +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none")
}
} else if(chart == "bar_1"){
EpiBib_AU <- dplyr::count(EpiBib_data, AU)
EpiBib_AU <- dplyr::arrange(EpiBib_AU, desc(n))
EpiBib_AU$AU <- factor(EpiBib_AU$AU, levels = unique(EpiBib_AU$AU)[order(EpiBib_AU$n)])
if(title == TRUE){
ggplot2::ggplot(data = EpiBib_AU[2:10,], ggplot2::aes(x = n, y = AU, n, fill = AU)) +
ggplot2::geom_col() +
ggplot2::xlab("Articles") + ggplot2::ylab("Authors") +
ggplot2::ggtitle("Most Productive Authors") +
ggsci::scale_fill_uchicago() +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none")
} else {
ggplot2::ggplot(data = EpiBib_AU[2:10,], ggplot2::aes(x = n, y = AU, n, fill = AU)) +
ggplot2::geom_col() +
ggplot2::xlab("Articles") + ggplot2::ylab("Authors") +
ggplot2::ggtitle("") +
scale_fill_uchicago() +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none")
}
} else if(chart == "bar_2"){
EpiBib_AUCO <- dplyr::count(EpiBib_data, AU_CO)
EpiBib_AUCO <- dplyr::arrange(EpiBib_AUCO, desc(n))
EpiBib_AUCO$AU_CO <- factor(EpiBib_AUCO$AU_CO, levels = unique(EpiBib_AUCO$AU_CO)[order(EpiBib_AUCO$n)])
if(title == TRUE){
ggplot2::ggplot(data = EpiBib_AUCO[1:9,], ggplot2::aes(x = n, y = AU_CO, fill = AU_CO)) +
ggplot2::geom_col() +
ggplot2::xlab("Aarticles") + ggplot2::ylab("Countries") +
ggplot2::ggtitle("Most productive countries") +
ggsci::scale_fill_uchicago() +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none")
} else {
ggplot2::ggplot(data = EpiBib_AUCO[1:9,], ggplot2::aes(x = n, y = AU_CO, fill = AU_CO)) +
ggplot2::geom_col() +
ggplot2::xlab("Articles") + ggplot2::ylab("Countries") +
ggplot2::ggtitle("") +
ggsci::scale_fill_uchicago() +
ggplot2::theme_minimal() +
ggplot2::theme(legend.position = "none")
}
} else {
stop("invalid arguments")
}
}
epibibr_visual()
View(epibibr_visual)
View(epibibr_visual)
knitr::opts_chunk$set(echo = TRUE)
epibibr_visual(chart = "bar_1")
epibibr_visual(chart = "bar_2")
library(EpiBibR)
library(EpiBibR)
library(EpiBibR)
library(EpiBibR)
knitr::opts_chunk$set(echo = TRUE)
library(EpiBibR)
epibibr_visual(chart = "line_1")
epibibr_visual(chart = "bar_2")
library(EpiBibR)
colson_articles <- epibibr_data(author = "Colson")
library(EpiBibR)
complete_data <- epibibr_data()
epibibr_data <- function(author = "", year = "", country = "", title = "", source = "", abstract = "") {
url <- paste0("https://warin.ca/datalake/epiBib/EpiBib.Rdata")
path <- file.path(tempdir(), "temp.Rdata")
curl::curl_download(url, path)
#reading the data
rData <- file.path(paste0(tempdir(), "/temp.Rdata"))
load(rData)
EpiBib_data
EpiBib_data[, 1:ncol(EpiBib_data)][is.na(EpiBib_data[, 1:ncol(EpiBib_data)])] <- "MISSING999"
EpiBib_grep <- with(EpiBib_data, EpiBib_data[grepl(author, AU, ignore.case = TRUE) &
grepl(year, PY, ignore.case = TRUE) &
grepl(country, AU_CO, ignore.case = TRUE) &
grepl(source, SO, ignore.case = TRUE) &
grepl(abstract, AB, ignore.case = TRUE), ])
EpiBib_grep[ EpiBib_grep == "MISSING999" ] <- NA
}
knitr::opts_chunk$set(echo = TRUE)
test <-epibibr_data()
epibibr_data <- function(author = "", year = "", country = "", title = "", source = "", abstract = "") {
url <- paste0("https://warin.ca/datalake/epiBib/EpiBib.Rdata")
path <- file.path(tempdir(), "temp.Rdata")
curl::curl_download(url, path)
#reading the data
rData <- file.path(paste0(tempdir(), "/temp.Rdata"))
load(rData)
EpiBib_data
EpiBib_data[, 1:ncol(EpiBib_data)][is.na(EpiBib_data[, 1:ncol(EpiBib_data)])] <- "MISSING999"
EpiBib_grep <- with(EpiBib_data, EpiBib_data[grepl(author, AU, ignore.case = TRUE) &
grepl(year, PY, ignore.case = TRUE) &
grepl(country, AU_CO, ignore.case = TRUE) &
grepl(source, SO, ignore.case = TRUE) &
grepl(abstract, AB, ignore.case = TRUE), ])
}
epibibr_data <- function(author = "", year = "", country = "", title = "", source = "", abstract = "") {
url <- paste0("https://warin.ca/datalake/epiBib/EpiBib.Rdata")
path <- file.path(tempdir(), "temp.Rdata")
curl::curl_download(url, path)
#reading the data
rData <- file.path(paste0(tempdir(), "/temp.Rdata"))
load(rData)
EpiBib_data
EpiBib_data[, 1:ncol(EpiBib_data)][is.na(EpiBib_data[, 1:ncol(EpiBib_data)])] <- "MISSING999"
EpiBib_grep <- with(EpiBib_data, EpiBib_data[grepl(author, AU, ignore.case = TRUE) &
grepl(year, PY, ignore.case = TRUE) &
grepl(country, AU_CO, ignore.case = TRUE) &
grepl(source, SO, ignore.case = TRUE) &
grepl(abstract, AB, ignore.case = TRUE), ])
}
test <-epibibr_data()
library(EpiBibR)
epibibr_visual(chart = "line_1_", title = TRUE)
epibibr_visual(chart = "line_1_", title = "TRUE")
epibibr_visual(chart = "line_1_")
epibibr_visual(chart = "line_1", title = TRUE)
epibibr_visual(chart = "bar_1")
epibibr_visual(chart = "bar_2")
library(EpiBibR)
pkgdown::build_site()
pkgdown::build_site()
library(EpiBibR)
usethis::use_cran_comments()
library(EpiBibR)
devtools::check_win_devel()
library(EpiBibR)
devtools::submit_cran()
library(EpiBibR)
library(EpiBibR)
url <- paste0("https://warin.ca/datalake/epiBib/EpiBib.Rdata")
path <- file.path(tempdir(), "temp.Rdata")
curl::curl_download(url, path)
#reading the data
rData <- file.path(paste0(tempdir(), "/temp.Rdata"))
load(rData)
library(EpiBibR)
library(EpiBibR)
library(EpiBibR)
devtools::check_win_devel()
library(EpiBibR)
library(EpiBibR)
devtools::check_win_devel()
library(EpiBibR)
devtools::release()
devtools::release()
pkgdown::build_site
pkgdown::build_site()
library(EpiBibR)
devtools::release()
devtools::release()
pkgdown::build_site()
library(EpiBibR)
aa <- epibibr_data()
unique(aa)
pkgdown::build_site()
url <- paste0("https://warin.ca/datalake/epiBib/EpiBib.Rdata")
path <- file.path(tempdir(), "temp.Rdata")
curl::curl_download(url, path)
#reading the data
rData <- file.path(paste0(tempdir(), "/temp.Rdata"))
load(rData)
pkgdown::build_site()
aa <- EpiBibR::epibibr_data()
library(EpiBibR)
pkgdown::build_site()
library(EpiBibR)
pkgdown::build_site()
library(EpiBibR)
load("~/EpiBibR/.RData")
load("~/EpiBibR/.RData")
